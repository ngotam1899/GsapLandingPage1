{"ast":null,"code":"/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\"use strict\";\n\nexports.__esModule = true;\nexports.formatUrl = formatUrl;\n\nvar querystring = _interopRequireWildcard(require(\"./querystring\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n} // Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar slashedProtocols = /https?|ftp|gopher|file/;\n\nfunction formatUrl(urlObj) {\n  var auth = urlObj.auth,\n      hostname = urlObj.hostname;\n  var protocol = urlObj.protocol || '';\n  var pathname = urlObj.pathname || '';\n  var hash = urlObj.hash || '';\n  var query = urlObj.query || '';\n  var host = false;\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';\n\n  if (urlObj.host) {\n    host = auth + urlObj.host;\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? \"[\".concat(hostname, \"]\") : hostname);\n\n    if (urlObj.port) {\n      host += ':' + urlObj.port;\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query));\n  }\n\n  var search = urlObj.search || query && \"?\".concat(query) || '';\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash;\n  if (search && search[0] !== '?') search = '?' + search;\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent);\n  search = search.replace('#', '%23');\n  return \"\".concat(protocol).concat(host).concat(pathname).concat(search).concat(hash);\n}","map":{"version":3,"sources":["../../../../../next-server/lib/router/utils/format-url.ts"],"names":[],"mappings":"AAAA;AAEA,IAAA,MAAA,GAAA,KAAA;AAEA;;AAAA,OAAA,CAAA,UAAA,GAAA,IAAA;AAAA,OAAA,CAAA,SAAA,GAAA,SAAA;;AAAA,IAAA,WAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAAA,SAAA,wBAAA,GAAA;AAAA,MAAA,OAAA,OAAA,KAAA,UAAA,EAAA,OAAA,IAAA;AAAA,MAAA,KAAA,GAAA,IAAA,OAAA,EAAA;;AAAA,EAAA,wBAAA,GAAA,oCAAA;AAAA,WAAA,KAAA;AAAA,GAAA;;AAAA,SAAA,KAAA;AAAA;;AAAA,SAAA,uBAAA,CAAA,GAAA,EAAA;AAAA,MAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA;AAAA,WAAA,GAAA;AAAA;;AAAA,MAAA,GAAA,KAAA,IAAA,IAAA,OAAA,GAAA,KAAA,QAAA,IAAA,OAAA,GAAA,KAAA,UAAA,EAAA;AAAA,WAAA;AAAA,iBAAA;AAAA,KAAA;AAAA;;AAAA,MAAA,KAAA,GAAA,wBAAA,EAAA;;AAAA,MAAA,KAAA,IAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA,EAAA;AAAA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAA;;AAAA,MAAA,MAAA,GAAA,EAAA;AAAA,MAAA,qBAAA,GAAA,MAAA,CAAA,cAAA,IAAA,MAAA,CAAA,wBAAA;;AAAA,OAAA,IAAA,GAAA,IAAA,GAAA,EAAA;AAAA,QAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,GAAA,CAAA,EAAA;AAAA,UAAA,IAAA,GAAA,qBAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,GAAA,EAAA,GAAA,CAAA,GAAA,IAAA;;AAAA,UAAA,IAAA,KAAA,IAAA,CAAA,GAAA,IAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AAAA,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,IAAA;AAAA,OAAA,MAAA;AAAA,QAAA,MAAA,CAAA,GAAA,CAAA,GAAA,GAAA,CAAA,GAAA,CAAA;AAAA;AAAA;AAAA;;AAAA,EAAA,MAAA,WAAA,GAAA,GAAA;;AAAA,MAAA,KAAA,EAAA;AAAA,IAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA,MAAA;AAAA;;AAAA,SAAA,MAAA;AAAA,C,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA","sourcesContent":["// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport { UrlObject } from 'url'\nimport { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n"]},"metadata":{},"sourceType":"script"}