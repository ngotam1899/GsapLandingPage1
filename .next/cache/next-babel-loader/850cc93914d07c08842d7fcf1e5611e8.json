{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _s = $RefreshSig$();\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/*** IMPORTS FROM imports-loader ***/\nvar define = false;\n\"use strict\";\n\nvar _interopRequireWildcard3 = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports[\"default\"] = exports.emitter = exports.router = exports.version = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"@babel/runtime/helpers/interopRequireWildcard\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _headManagerContext = require(\"../next-server/lib/head-manager-context\");\n\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\n\nvar _routerContext = require(\"../next-server/lib/router-context\");\n\nvar _router = require(\"../next-server/lib/router/router\");\n\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\n\nvar querystring = _interopRequireWildcard3(require(\"../next-server/lib/router/utils/querystring\"));\n\nvar envConfig = _interopRequireWildcard3(require(\"../next-server/lib/runtime-config\"));\n\nvar _utils = require(\"../next-server/lib/utils\");\n\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\n\nvar _pageLoader = _interopRequireWildcard3(require(\"./page-loader\"));\n\nvar _performanceRelayer = _interopRequireDefault(require(\"./performance-relayer\"));\n\nvar _router2 = require(\"./router\");\n/* global location */\n\n\nif (!('finally' in Promise.prototype)) {\n  ;\n  Promise.prototype[\"finally\"] = require('next/dist/build/polyfills/finally-polyfill.min');\n}\n\nvar data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nvar version = \"9.5.3\";\nexports.version = version;\nvar hydrateProps = data.props,\n    hydrateErr = data.err,\n    page = data.page,\n    query = data.query,\n    buildId = data.buildId,\n    assetPrefix = data.assetPrefix,\n    runtimeConfig = data.runtimeConfig,\n    dynamicIds = data.dynamicIds,\n    isFallback = data.isFallback;\nvar prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n\n__webpack_public_path__ = \"\".concat(prefix, \"/_next/\"); //eslint-disable-line\n// Initialize next/config with the environment configuration\n\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {}\n});\nvar asPath = (0, _utils.getURL)(); // make sure not to attempt stripping basePath for 404s\n\nif ((0, _router.hasBasePath)(asPath)) {\n  asPath = (0, _router.delBasePath)(asPath);\n}\n\nvar pageLoader = new _pageLoader[\"default\"](buildId, prefix, page);\n\nvar register = function register(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      r = _ref2[0],\n      f = _ref2[1];\n\n  return pageLoader.registerPage(r, f);\n};\n\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map(function (p) {\n    return setTimeout(function () {\n      return register(p);\n    }, 0);\n  });\n}\n\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nvar headManager = (0, _headManager[\"default\"])();\nvar appElement = document.getElementById('__next');\nvar lastAppProps;\n\nvar _lastRenderReject;\n\nvar webpackHMR;\nvar router;\nexports.router = router;\nvar CachedComponent;\nvar cachedStyleSheets;\nvar CachedApp, onPerfEntry;\n\nvar Container = /*#__PURE__*/function (_react$default$Compon) {\n  \"use strict\";\n\n  _inherits(Container, _react$default$Compon);\n\n  var _super = _createSuper(Container);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Container, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(componentErr, info) {\n      this.props.fn(componentErr, info);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollToHash(); // We need to replace the router state if:\n      // - the page was (auto) exported and has a query string or search (hash)\n      // - it was auto exported and is a dynamic route (to provide params)\n      // - if it is a client-side skeleton (fallback render)\n\n      if (router.isSsr && (isFallback || data.nextExport && ((0, _isDynamic.isDynamicRoute)(router.pathname) || location.search) || hydrateProps && hydrateProps.__N_SSG && location.search)) {\n        // update query on mount for exported pages\n        router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), asPath, {\n          // @ts-ignore\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.scrollToHash();\n    }\n  }, {\n    key: \"scrollToHash\",\n    value: function scrollToHash() {\n      var _location = location,\n          hash = _location.hash;\n      hash = hash && hash.substring(1);\n      if (!hash) return;\n      var el = document.getElementById(hash);\n      if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n      // it won't scroll properly.\n\n      setTimeout(function () {\n        return el.scrollIntoView();\n      }, 0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (false) {\n        return this.props.children;\n      } else {\n        var _require = require('@next/react-dev-overlay/lib/client'),\n            ReactDevOverlay = _require.ReactDevOverlay;\n\n        return /*#__PURE__*/_react[\"default\"].createElement(ReactDevOverlay, null, this.props.children);\n      }\n    }\n  }]);\n\n  return Container;\n}(_react[\"default\"].Component);\n\nvar emitter = (0, _mitt[\"default\"])();\nexports.emitter = emitter;\n\nvar _default = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var opts,\n        _yield$pageLoader$loa,\n        app,\n        mod,\n        initialErr,\n        _yield$pageLoader$loa2,\n        _require2,\n        isValidElementType,\n        _require3,\n        getNodeError,\n        renderCtx,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            opts = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};\n\n            // This makes sure this specific lines are removed in production\n            if (true) {\n              webpackHMR = opts.webpackHMR;\n            }\n\n            _context.next = 4;\n            return pageLoader.loadPage('/_app');\n\n          case 4:\n            _yield$pageLoader$loa = _context.sent;\n            app = _yield$pageLoader$loa.page;\n            mod = _yield$pageLoader$loa.mod;\n            CachedApp = app;\n\n            if (mod && mod.reportWebVitals) {\n              onPerfEntry = function onPerfEntry(_ref4) {\n                var id = _ref4.id,\n                    name = _ref4.name,\n                    startTime = _ref4.startTime,\n                    value = _ref4.value,\n                    duration = _ref4.duration,\n                    entryType = _ref4.entryType,\n                    entries = _ref4.entries;\n                // Combines timestamp with random number for unique ID\n                var uniqueID = \"\".concat(Date.now(), \"-\").concat(Math.floor(Math.random() * (9e12 - 1)) + 1e12);\n                var perfStartEntry;\n\n                if (entries && entries.length) {\n                  perfStartEntry = entries[0].startTime;\n                }\n\n                mod.reportWebVitals({\n                  id: id || uniqueID,\n                  name: name,\n                  startTime: startTime || perfStartEntry,\n                  value: value == null ? duration : value,\n                  label: entryType === 'mark' || entryType === 'measure' ? 'custom' : 'web-vital'\n                });\n              };\n            }\n\n            initialErr = hydrateErr;\n            _context.prev = 10;\n            ;\n            _context.next = 14;\n            return pageLoader.loadPage(page);\n\n          case 14:\n            _yield$pageLoader$loa2 = _context.sent;\n            CachedComponent = _yield$pageLoader$loa2.page;\n            cachedStyleSheets = _yield$pageLoader$loa2.styleSheets;\n\n            if (!true) {\n              _context.next = 21;\n              break;\n            }\n\n            _require2 = require('react-is'), isValidElementType = _require2.isValidElementType;\n\n            if (isValidElementType(CachedComponent)) {\n              _context.next = 21;\n              break;\n            }\n\n            throw new Error(\"The default export is not a React Component in page: \\\"\".concat(page, \"\\\"\"));\n\n          case 21:\n            _context.next = 26;\n            break;\n\n          case 23:\n            _context.prev = 23;\n            _context.t0 = _context[\"catch\"](10);\n            // This catches errors like throwing in the top level of a module\n            initialErr = _context.t0;\n\n          case 26:\n            if (true) {\n              _require3 = require('@next/react-dev-overlay/lib/client'), getNodeError = _require3.getNodeError; // Server-side runtime errors need to be re-thrown on the client-side so\n              // that the overlay is rendered.\n\n              if (initialErr) {\n                if (initialErr === hydrateErr) {\n                  setTimeout(function () {\n                    var error;\n\n                    try {\n                      // Generate a new error object. We `throw` it because some browsers\n                      // will set the `stack` when thrown, and we want to ensure ours is\n                      // not overridden when we re-throw it below.\n                      throw new Error(initialErr.message);\n                    } catch (e) {\n                      error = e;\n                    }\n\n                    error.name = initialErr.name;\n                    error.stack = initialErr.stack;\n                    var node = getNodeError(error);\n                    throw node;\n                  });\n                } // We replaced the server-side error with a client-side error, and should\n                // no longer rewrite the stack trace to a Node error.\n                else {\n                    setTimeout(function () {\n                      throw initialErr;\n                    });\n                  }\n              }\n            }\n\n            if (!window.__NEXT_PRELOADREADY) {\n              _context.next = 30;\n              break;\n            }\n\n            _context.next = 30;\n            return window.__NEXT_PRELOADREADY(dynamicIds);\n\n          case 30:\n            exports.router = router = (0, _router2.createRouter)(page, query, asPath, {\n              initialProps: hydrateProps,\n              pageLoader: pageLoader,\n              App: CachedApp,\n              Component: CachedComponent,\n              initialStyleSheets: cachedStyleSheets,\n              wrapApp: wrapApp,\n              err: initialErr,\n              isFallback: Boolean(isFallback),\n              subscription: function subscription(_ref5, App) {\n                var Component = _ref5.Component,\n                    styleSheets = _ref5.styleSheets,\n                    props = _ref5.props,\n                    err = _ref5.err;\n                return render({\n                  App: App,\n                  Component: Component,\n                  styleSheets: styleSheets,\n                  props: props,\n                  err: err\n                });\n              }\n            }); // call init-client middleware\n\n            if (process.env.__NEXT_PLUGINS) {\n              // @ts-ignore\n              // eslint-disable-next-line\n              Promise.resolve().then(function () {\n                return (0, _interopRequireWildcard2[\"default\"])(require('next-plugin-loader?middleware=on-init-client!'));\n              }).then(function (initClientModule) {\n                return initClientModule[\"default\"]({\n                  router: router\n                });\n              })[\"catch\"](function (initClientErr) {\n                console.error('Error calling client-init for plugins', initClientErr);\n              });\n            }\n\n            renderCtx = {\n              App: CachedApp,\n              Component: CachedComponent,\n              styleSheets: cachedStyleSheets,\n              props: hydrateProps,\n              err: initialErr\n            };\n\n            if (!false) {\n              _context.next = 38;\n              break;\n            }\n\n            render(renderCtx);\n            return _context.abrupt(\"return\", emitter);\n\n          case 38:\n            return _context.abrupt(\"return\", {\n              emitter: emitter,\n              render: render,\n              renderCtx: renderCtx\n            });\n\n          case 39:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[10, 23]]);\n  }));\n\n  return function _default() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports[\"default\"] = _default;\n\nfunction render(_x) {\n  return _render.apply(this, arguments);\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\n\n\nfunction _render() {\n  _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(renderingProps) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!renderingProps.err) {\n              _context2.next = 4;\n              break;\n            }\n\n            _context2.next = 3;\n            return renderError(renderingProps);\n\n          case 3:\n            return _context2.abrupt(\"return\");\n\n          case 4:\n            _context2.prev = 4;\n            _context2.next = 7;\n            return doRender(renderingProps);\n\n          case 7:\n            _context2.next = 16;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](4);\n\n            if (!_context2.t0.cancelled) {\n              _context2.next = 13;\n              break;\n            }\n\n            throw _context2.t0;\n\n          case 13:\n            if (true) {\n              // Ensure this error is displayed in the overlay in development\n              setTimeout(function () {\n                throw _context2.t0;\n              });\n            }\n\n            _context2.next = 16;\n            return renderError((0, _extends2[\"default\"])({}, renderingProps, {\n              err: _context2.t0\n            }));\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[4, 9]]);\n  }));\n  return _render.apply(this, arguments);\n}\n\nfunction renderError(renderErrorProps) {\n  var App = renderErrorProps.App,\n      err = renderErrorProps.err; // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n\n  if (true) {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError(); // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n\n    return doRender({\n      App: function App() {\n        return null;\n      },\n      props: {},\n      Component: function Component() {\n        return null;\n      },\n      styleSheets: []\n    });\n  }\n\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2[\"default\"])(require('next-plugin-loader?middleware=on-error-client!'));\n    }).then(function (onClientErrorModule) {\n      return onClientErrorModule[\"default\"]({\n        err: err\n      });\n    })[\"catch\"](function (onClientErrorErr) {\n      console.error('error calling on-error-client for plugins', onClientErrorErr);\n    });\n  } // Make sure we log the error to the console, otherwise users can't track down issues.\n\n\n  console.error(err);\n  return pageLoader.loadPage('/_error').then(function (_ref6) {\n    var ErrorComponent = _ref6.page,\n        styleSheets = _ref6.styleSheets;\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    var AppTree = wrapApp(App);\n    var appCtx = {\n      Component: ErrorComponent,\n      AppTree: AppTree,\n      router: router,\n      ctx: {\n        err: err,\n        pathname: page,\n        query: query,\n        asPath: asPath,\n        AppTree: AppTree\n      }\n    };\n    return Promise.resolve(renderErrorProps.props ? renderErrorProps.props : (0, _utils.loadGetInitialProps)(App, appCtx)).then(function (initProps) {\n      return doRender((0, _extends2[\"default\"])({}, renderErrorProps, {\n        err: err,\n        Component: ErrorComponent,\n        styleSheets: styleSheets,\n        props: initProps\n      }));\n    });\n  });\n} // If hydrate does not exist, eg in preact.\n\n\nvar isInitialRender = typeof _reactDom[\"default\"].hydrate === 'function';\nvar reactRoot = null;\n\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      var opts = {\n        hydrate: true\n      };\n      reactRoot = process.env.__NEXT_REACT_MODE === 'concurrent' ? _reactDom[\"default\"].unstable_createRoot(domEl, opts) : _reactDom[\"default\"].unstable_createBlockingRoot(domEl, opts);\n    }\n\n    reactRoot.render(reactEl);\n  } else {\n    // mark start of hydrate/render\n    if (_utils.ST) {\n      performance.mark('beforeRender');\n    } // The check for `.hydrate` is there to support React alternatives like preact\n\n\n    if (isInitialRender) {\n      _reactDom[\"default\"].hydrate(reactEl, domEl, markHydrateComplete);\n\n      isInitialRender = false;\n\n      if (onPerfEntry && _utils.ST) {\n        (0, _performanceRelayer[\"default\"])(onPerfEntry);\n      }\n    } else {\n      _reactDom[\"default\"].render(reactEl, domEl, markRenderComplete);\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterHydrate'); // mark end of hydration\n\n  performance.measure('Next.js-before-hydration', 'navigationStart', 'beforeRender');\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n}\n\nfunction markRenderComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterRender'); // mark end of render\n\n  var navStartEntries = performance.getEntriesByName('routeChange', 'mark');\n\n  if (!navStartEntries.length) {\n    return;\n  }\n\n  performance.measure('Next.js-route-change-to-render', navStartEntries[0].name, 'beforeRender');\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry);\n    performance.getEntriesByName('Next.js-route-change-to-render').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n  ['Next.js-route-change-to-render', 'Next.js-render'].forEach(function (measure) {\n    return performance.clearMeasures(measure);\n  });\n}\n\nfunction clearMarks() {\n  ;\n  ['beforeRender', 'afterHydrate', 'afterRender', 'routeChange'].forEach(function (mark) {\n    return performance.clearMarks(mark);\n  });\n}\n\nfunction AppContainer(_ref7) {\n  var children = _ref7.children;\n  return /*#__PURE__*/_react[\"default\"].createElement(Container, {\n    fn: function fn(error) {\n      return renderError({\n        App: CachedApp,\n        err: error\n      })[\"catch\"](function (err) {\n        return console.error('Error rendering page: ', err);\n      });\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_routerContext.RouterContext.Provider, {\n    value: (0, _router2.makePublicRouterInstance)(router)\n  }, /*#__PURE__*/_react[\"default\"].createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: headManager\n  }, children)));\n}\n\n_c = AppContainer;\n\nvar wrapApp = function wrapApp(App) {\n  return function (wrappedAppProps) {\n    var appProps = (0, _extends2[\"default\"])({}, wrappedAppProps, {\n      Component: CachedComponent,\n      err: hydrateErr,\n      router: router\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(AppContainer, null, /*#__PURE__*/_react[\"default\"].createElement(App, appProps));\n  };\n};\n\nfunction doRender(_ref8) {\n  var App = _ref8.App,\n      Component = _ref8.Component,\n      props = _ref8.props,\n      err = _ref8.err,\n      styleSheets = _ref8.styleSheets;\n  Component = Component || lastAppProps.Component;\n  props = props || lastAppProps.props;\n  var appProps = (0, _extends2[\"default\"])({}, props, {\n    Component: Component,\n    err: err,\n    router: router\n  }); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n\n  lastAppProps = appProps;\n  var canceled = false;\n  var resolvePromise;\n  var renderPromise = new Promise(function (resolve, reject) {\n    if (_lastRenderReject) {\n      _lastRenderReject();\n    }\n\n    resolvePromise = function resolvePromise() {\n      _lastRenderReject = null;\n      resolve();\n    };\n\n    _lastRenderReject = function lastRenderReject() {\n      canceled = true;\n      _lastRenderReject = null;\n      var error = new Error('Cancel rendering route');\n      error.cancelled = true;\n      reject(error);\n    };\n  }); // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n\n  function onStart() {\n    if ( // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles.\n    isInitialRender || // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    true) {\n      return false;\n    }\n\n    var currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n    var currentHrefs = new Set(currentStyleTags.map(function (tag) {\n      return tag.getAttribute('data-n-href');\n    }));\n    styleSheets.forEach(function (_ref9) {\n      var href = _ref9.href,\n          text = _ref9.text;\n\n      if (!currentHrefs.has(href)) {\n        var styleTag = document.createElement('style');\n        styleTag.setAttribute('data-n-href', href);\n        styleTag.setAttribute('media', 'x');\n        document.head.appendChild(styleTag);\n        styleTag.appendChild(document.createTextNode(text));\n      }\n    });\n    return true;\n  }\n\n  function onCommit() {\n    if ( // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    false && // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles:\n    !isInitialRender && // Ensure this render was not canceled\n    !canceled) {\n      var desiredHrefs = new Set(styleSheets.map(function (s) {\n        return s.href;\n      }));\n      var currentStyleTags = (0, _pageLoader.looseToArray)(document.querySelectorAll('style[data-n-href]'));\n      var currentHrefs = currentStyleTags.map(function (tag) {\n        return tag.getAttribute('data-n-href');\n      }); // Toggle `<style>` tags on or off depending on if they're needed:\n\n      for (var idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media');\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x');\n        }\n      } // Reorder styles into intended order:\n\n\n      var referenceNode = document.querySelector('noscript[data-n-css]');\n\n      if ( // This should be an invariant:\n      referenceNode) {\n        styleSheets.forEach(function (_ref10) {\n          var href = _ref10.href;\n          var targetTag = document.querySelector(\"style[data-n-href=\\\"\".concat(href, \"\\\"]\"));\n\n          if ( // This should be an invariant:\n          targetTag) {\n            referenceNode.parentNode.insertBefore(targetTag, referenceNode.nextSibling);\n            referenceNode = targetTag;\n          }\n        });\n      } // Finally, clean up server rendered stylesheets:\n\n\n      (0, _pageLoader.looseToArray)(document.querySelectorAll('link[data-n-p]')).forEach(function (el) {\n        el.parentNode.removeChild(el);\n      }); // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n\n      getComputedStyle(document.body, 'height');\n    }\n\n    resolvePromise();\n  }\n\n  var elem = /*#__PURE__*/_react[\"default\"].createElement(Root, {\n    callback: onCommit\n  }, /*#__PURE__*/_react[\"default\"].createElement(AppContainer, null, /*#__PURE__*/_react[\"default\"].createElement(App, appProps)));\n\n  onStart(); // We catch runtime errors using componentDidCatch which will trigger renderError\n\n  renderReactElement(process.env.__NEXT_STRICT_MODE ? /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].StrictMode, null, elem) : elem, appElement);\n  return renderPromise;\n}\n\nfunction Root(_ref11) {\n  _s();\n\n  var callback = _ref11.callback,\n      children = _ref11.children;\n\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react[\"default\"].useLayoutEffect(function () {\n    return callback();\n  }, [callback]);\n\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    _react[\"default\"].useEffect(function () {\n      window.__NEXT_HYDRATED = true;\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB();\n      }\n    }, []);\n  }\n\n  return children;\n}\n\n_s(Root, \"Gjgl5rfcc2T4sFnfEMfRvL6K4Q4=\");\n\n_c2 = Root;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Root\");","map":{"version":3,"sources":["../../client/index.tsx"],"names":["__webpack_public_path__","envConfig","setConfig","publicRuntimeConfig","window","router","isFallback","data","hydrateProps","location","shallow","onPerfEntry","uniqueID","Date","now","Math","perfStartEntry","entries","length","startTime","mod","reportWebVitals","initialErr","hydrateErr","setTimeout","renderErr","cancelled","process","env","webpackHMR","Component","console","AppTree","wrapApp","ErrorComponent","Promise","renderErrorProps","props","App","isInitialRender","ReactDOM","reactRoot","renderReactElement","performance","measure","getEntriesByName","clearMarks","markRenderComplete","navStartEntries","lastAppProps","appProps","canceled","onStart","NODE_ENV","referenceNode","styleSheets","targetTag","parentNode","document","querySelectorAll","forEach","removeChild","getComputedStyle","body","resolvePromise","__NEXT_STRICT_MODE","React","useEffect","__NEXT_HYDRATED_CB"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAsEAA,IAAAA,MAAAA,GAAAA,KAAAA;AAEAC;;AAAUC,IAAVD,wBACuB,GADH,OAElBE,CAFFF,+CAEEE,CAFQD;;AAKG,IAAb,sBAEA,GAAA,OAAA,CAAA,8CAAA,CAFa;;AAEb,OAAA,CAAA,UAAA,GAAA,IAAA;AAAA,OAAA,CAAA,MAAA,GAAA,MAAA;AAAA,OAAA,CAAA,WAAA,GAAA,WAAA;AAAA,OAAA,WAAA,GAAA,OAAA,CAAA,OAAA,GAAA,OAAA,CAAA,MAAA,GAAA,OAAA,CAAA,OAAA,GAAA,KAAA,CAAA;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gCAAA,CAAA,CAAA;;AAAA,IAAA,wBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,+CAAA,CAAA,CAAA;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAAA,IAAA,mBAAA,GAAA,OAAA,CAAA,yCAAA,CAAA;;AAAA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,yBAAA,CAAA,CAAA;;AAAA,IAAA,cAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,kCAAA,CAAA;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,4CAAA,CAAA;;AAAA,IAAA,WAAA,GAAA,wBAAA,CAAA,OAAA,CAAA,6CAAA,CAAA,CAAA;;AAAA,IAAA,SAAA,GAAA,wBAAA,CAAA,OAAA,CAAA,mCAAA,CAAA,CAAA;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAAA,IAAA,YAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AAAA,IAAA,WAAA,GAAA,wBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AAAA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,uBAAA,CAAA,CAAA;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAAA;;;AAAA,IAAA,EAAA,aAAA,OAAA,CAAA,SAAA,CAAA,EAAA;AAAA;AAAA,EAAA,OAAA,CAAA,SAAA,cAAA,OAAA,CAAA,gDAAA,CAAA;AAAA;;AAAA,IAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,cAAA,CAAA,eAAA,EAAA,WAAA,CAAA;AAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AAAA,IAAA,OAAA,GAAA,OAAA;AAAA,OAAA,CAAA,OAAA,GAAA,OAAA;IAAA,Y,GAAA,I,CAAA,K;IAAA,U,GAAA,I,CAAA,G;IAAA,I,GAAA,I,CAAA,I;IAAA,K,GAAA,I,CAAA,K;IAAA,O,GAAA,I,CAAA,O;IAAA,W,GAAA,I,CAAA,W;IAAA,a,GAAA,I,CAAA,a;IAAA,U,GAAA,I,CAAA,U;IAAA,U,GAAA,I,CAAA,U;AAAA,IAAA,MAAA,GAAA,WAAA,IAAA,EAAA,C,CAAA;AACA;;AAUE,uBAAA,aAAA,MAAA,YAAA,C,CAAA;AACAE;;AA2BE,SAAA,CAAA,SAAA,CAAA;AAAA,EAAA,mBAAA,EAAA,EAAA;AAAA,EAAA,mBAAA,EAAA,aAAA,IAAA;AAAA,CAAA;AAAA,IAAA,MAAA,GAAA,CAAA,GAAA,MAAA,CAAA,MAAA,GAAA,C,CAAA;;AACA,IAAA,CAAA,GAAA,OAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA;AAAA,EAAA,MAAA,GAAA,CAAA,GAAA,OAAA,CAAA,WAAA,EAAA,MAAA,CAAA;AAAA;;AAAA,IAAA,UAAA,GAAA,IAAA,WAAA,WAAA,CAAA,OAAA,EAAA,MAAA,EAAA,IAAA,CAAA;;AAAA,IAAA,QAAA,GAAA,SAAA,QAAA;AAAA;AAAA,MAAA,CAAA;AAAA,MAAA,CAAA;;AAAA,SAAA,UAAA,CAAA,YAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,CAAA;;AAAA,IAAA,MAAA,CAAA,QAAA,EAAA;AAAA;AACA;AACA,EAAA,MACEC,CAAAA,QADF,CACEA,GADF,CAEGC,UAAAA,CAAAA;AAAAA,WAAAA,UACEC,CAAI;AAAA,aAAJA,QAAAA,CAAAA,CAAAA,CAAI;AAAA,KAAJA,EACE,CADFA,CADFD;AAAAA,GAFH;AAIO;;AAAA,MAAA,CAAA,QAAA,GAAA,EAAA;AAAA,MAAeD,CAAAA,QAAf,CAAA,IAAA,GAAA,QAAA;AAA2C,IAF/CC,WAGEE,GAAAA,CAAAA,GAAAA,YAAAA,WAAAA,GAD6C;AAC7CA,IAAwCC,UAJ3CJ,GADF,QAOE,CAAA,cAPF,CAOE,QAPF,CAKKG;AAEH,IAAA,YAAA;;AAAA,IAAA,iBAAA;;AAAA,IAAA,UAAA;AAAA,IAAA,MAAA;AAAA,OAAA,CAAA,MAAA,GAAA,MAAA;AAAA,IAAA,eAAA;AAAA,IAAA,iBAAA;AAAA,IAAA,SAAA,EAAA,WAAA;;IAAA,S;;;;;;;;;;;;;;;sCAAA,Y,EAAA,I,EAAA;AAAA,WAAA,KAAA,CAAA,EAAA,CAAA,YAAA,EAAA,IAAA;AAAA;;;wCAAA;AAAA,WAAA,YAAA,GAAA,CAAA;AACAH;AAYI;AACA;;AACA,UAAA,MAAA,CAAA,KAAA,KAAA,UAAA,IAAA,IAAA,CAAA,UAAA,KAAA,CAAA,GAAA,UAAA,CAAA,cAAA,EAAA,MAAA,CAAA,QAAA,KAAA,QAAA,CAAA,MAAA,CAAA,IAAA,YAAA,IAAA,YAAA,CAAA,OAAA,IAAA,QAAA,CAAA,MAAA,CAAA,EAAA;AAAA;AAJF,QAAA,MAME,CAAA,OANF,CAME,MAAA,CAAA,QAAA,GAAA,GAAA,GAAA,MAAA,CAAA,WAAA,CAAA,MAAA,CAAA,WAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,IAAA,eAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,CANF,EAME,MANF,EAME;AAAA;AACA;AACA;AACA;AACAK,UAAAA,EAAAA,EAAAA,CAJA;AAhBJL;AAuCF;AA3DD;AA6ED;AAiBI,UAAA,OAAMO,EAAAA,CAAAA;AA1DF,SANF;AAgEuBE;AAALD;;;yCACPE;AAAAA,WAAXA,YAAWA;AADb;;;mCAGIC;AAAAA,sBAAJ,QAAIA;AAAAA,UAAAA,IAAAA,aAAAA,IAAAA;AAEAC,MAAAA,IAAO,GAAIA,IAAAA,IAAAA,IAAQC,CAAvB,SAAeD,CACbD,CADaC,CAAXA;AACFD,UAAAA,CAAAA,IAAAA,EAAiBC;AAAAA,UAAWE,EAAAA,GAA5BH,QAGEK,CAAJD,cAHEJ,CAGkB,IAHlBA,CAAiBC;AAIX,UAAIL,CAAAA,EAAJ,EADY,OANhBI,CAbNL;AAkDAW;;AAMA,MAAA,UAAA,CAAA;AAAA,eAAA,EAAA,CAAA,cAAA,EAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AAAA;;;6BAAA;AAAA,iBAAA;AAAA,eAAA,KAAA,KAAA,CAAA,QAAA;AAAA,OAAA,MAAA;AAAA,uBAAA,OAAA,CAAA,oCAAA,CAAA;AAAA,YAAA,eAAA,YAAA,eAAA;;AAAA,eAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,eAAA,EAAA,IAAA,EAAA,KAAA,KAAA,CAAA,QAAA,CAAA;AAAA;AAAA;;;;EAzHE,MAAA,WAAA,CAAA,S;;AAyHF,IAAA,OAAA,GAAA,CAAA,GAAA,KAAA,WAAA,GAAA;AAAA,OAAA,CAAA,OAAA,GAAA,OAAA;;AAAA,IAAA,QAAA;AAAA,uEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,YAAA,IAAA,2DAAA,EAAA;;AAAA;AACA,sBACqBC;AAAnB,cAAA,UACEC,GAAAA,IAAW,CAAA,UADb;AAGI;;AALN;AAAA,mBAMQ,UAAA,CAAA,QAAA,CAAA,OAAA,CANR;;AAAA;AAAA;AAMQ,YAAA,GANR,yBAMQ,IANR;AAMQ,YAAA,GANR,yBAMQ,GANR;AAMQ,YAAA,SAAA,GAAA,GAAA;;AAAA,gBAAA,GAAA,IAAA,GAAA,CAAA,eAAA,EAAA;AAAA,cAAA,WAAA,GAAA,4BAAA;AAAA,oBAAA,EAAA,SAAA,EAAA;AAAA,oBAAA,IAAA,SAAA,IAAA;AAAA,oBAAA,SAAA,SAAA,SAAA;AAAA,oBAAA,KAAA,SAAA,KAAA;AAAA,oBAAA,QAAA,SAAA,QAAA;AAAA,oBAAA,SAAA,SAAA,SAAA;AAAA,oBAAA,OAAA,SAAA,OAAA;AAAA;AACA,oBAAA,QAAA,aAAA,IAAA,CAAA,GAAA,EAAA,cAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,MAAA,OAAA,CAAA,CAAA,IAAA,IAAA,CAAA;AAAA,oBAAA,cAAA;;AAAA,oBAAA,OAAA,IAAA,OAAA,CAAA,MAAA,EAAA;AAAA,kBAAA,cAAA,GAAA,OAAA,CAAA,CAAA,CAAA,CAAA,SAAA;AAAA;;AAAA,gBAAA,GAAA,CAAA,eAAA,CAAA;AAAA,kBAAA,EAAA,EAAA,EAAA,IAAA,QAAA;AAAA,kBAAA,IAAA,EAAA,IAAA;AAAA,kBAAA,SAAA,EAAA,SAAA,IAAA,cAAA;AAAA,kBAAA,KAAA,EAAA,KAAA,IAAA,IAAA,GAAA,QAAA,GAAA,KAAA;AAAA,kBAAA,KAAA,EAAA,SAAA,KAAA,MAAA,IAAA,SAAA,KAAA,SAAA,GAAA,QAAA,GAAA;AAAA,iBAAA;AAAA,eADA;AACA;;AAAA,YAAA,UAPR,GAOQ,UAPR;AAAA;AAOQ;AAPR;AAAA,mBAOQ,UAAA,CAAA,QAAA,CAAA,IAAA,CAPR;;AAAA;AAAA;AAOQ,YAAA,eAPR,0BAOQ,IAPR;AAOQ,YAAA,iBAPR,0BAOQ,WAPR;;AAAA;AAAA;AAAA;AAAA;;AAAA,wBAOQ,OAAA,CAAA,UAAA,CAPR,EAOQ,kBAPR,aAOQ,kBAPR;;AAAA,gBAOQ,kBAAA,CAAA,eAAA,CAPR;AAAA;AAAA;AAAA;;AAAA,kBAOQ,IAAA,KAAA,kEAAA,IAAA,QAPR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOQ;AACA,YAAA,UAAA,cAAA;;AARR;AAQQ,sBAAA;AAAA,0BAAA,OAAA,CAAA,oCAAA,CAAA,EAAA,YAAA,aAAA,YAAA,EAAA;AALJA;;AAmBF,kBAAA,UAAA,EAAA;AAAA,oBAAA,UAAA,KAAA,UAAA,EAAA;AAAA,kBAAA,UAAA,CAAA,YAAA;AAAA,wBAAA,KAAA;;AAAA,wBAAA;AAAA;AApBA;AA+CJ;AAEE,4BAAA,IAAA,KAAA,CAAA,UAAA,CAAA,OAAA,CAAA;AAAA,qBA7BE,CA6BF,OAAA,CAAA,EAAA;AAAA,sBAAA,KAAA,GAAA,CAAA;AAAA;;AAAA,oBAAA,KAAA,CAAA,IAAA,GAAA,UAAA,CAAA,IAAA;AAAA,oBAAA,KAAA,CAAA,KAAA,GAAA,UAAA,CAAA,KAAA;AAAA,wBAAA,IAAA,GAAA,YAAA,CAAA,KAAA,CAAA;AAAA,0BAAA,IAAA;AAAA,mBA7BE,CAAA;AA6BF,iBA7BE,CA6BF;AACA;AA9BE,qBAiEEC;AAAAA,oBAAAA,UAAUC,CAAAA,YAAAA;AAAd,4BACE,UADF;AACE,qBADYA,CAAVD;AAIJ;AAAA;AAAIE;;AA3FJ,iBA2FIA,MAAQC,CAAZ,mBA3FA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA2F4C,MAC1C,CAAA,mBAD0C,CAC1C,UAD0C,CA3F5C;;AAAA;AA4FE,YAAA,OAAA,CAAA,MAAA,GAAA,MAAA,GAAA,CAAA,GAAA,QAAA,CAAA,YAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA;AAAA,cAAA,YAAA,EAAA,YAAA;AAAA,cAAA,UAAA,EAAA,UAAA;AAAA,cAAA,GAAA,EAAA,SAAA;AAAA,cAAA,SAAA,EAAA,eAAA;AAAA,cAAA,kBAAA,EAAA,iBAAA;AAAA,cAAA,OAAA,EAAA,OAAA;AAAA,cAAA,GAAA,EAAA,UAAA;AAAA,cAAA,UAAA,EAAA,OAAA,CAAA,UAAA,CAAA;AAAA,cAAA,YAAA,EAAA,6BAAA,GAAA;AAAA,oBAAA,SAAA,SAAA,SAAA;AAAA,oBAAA,WAAA,SAAA,WAAA;AAAA,oBAAA,KAAA,SAAA,KAAA;AAAA,oBAAA,GAAA,SAAA,GAAA;AAAA,uBAAA,MAAA,CAAA;AAAA,kBAAA,GAAA,EAAA,GAAA;AAAA,kBAAA,SAAA,EAAA,SAAA;AAAA,kBAAA,WAAA,EAAA,WAAA;AAAA,kBAAA,KAAA,EAAA,KAAA;AAAA,kBAAA,GAAA,EAAA;AAAA,iBAAA,CAAA;AAAA;AAAA,aAAA,CAAA,CA5FF,CA4FE;;AACAJ,gBAAAA,OAAU,CAAC,GAAXA,CAAiB,cAAjBA,EACQC;AADRD;AASN;AACA,cAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA;AAAA,uBAAA,CAAA,GAAA,wBAAA,WAAA,EAAA,OAAA,CAAA,+CAAA,CAAA,CAAA;AAAA,eAAA,EAAA,IAAA,CAAA,UAAA,gBAAA,EAAA;AAAA,uBAAA,gBAAA,WAAA,CAAA;AAAA,kBAAA,MAAA,EAAA;AAAA,iBAAA,CAAA;AAAA,eAAA,WAAA,UAAA,aAAA,EAAA;AAAA,gBAAA,OAAA,CAAA,KAAA,CAAA,uCAAA,EAAA,aAAA;AAAA,eAAA;AAAA;;AAAA,YAAA,SAvGI,GAuGJ;AAAA,cAAA,GAAA,EAAA,SAAA;AAAA,cAAA,SAAA,EAAA,eAAA;AAAA,cAAA,WAAA,EAAA,iBAAA;AAAA,cAAA,KAAA,EAAA,YAAA;AAAA,cAAA,GAAA,EAAA;AAAA,aAvGI;;AAAA;AAAA;AAAA;AAAA;;AAuGJ,YAAA,MAAA,CAAA,SAAA,CAAA;AAvGI,6CAuGJ,OAvGI;;AAAA;AAAA,6CAuGJ;AAAA,cAAA,OAAA,EAAA,OAAA;AAAA,cAAA,MAAA,EAAA,MAAA;AAAA,cAAA,SAAA,EAAA;AAAA,aAvGI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA;;AAAA,kBAAA,QAAA;AAAA;AAAA;AAAA,GAAA;;AAuGJ,OAAA,WAAA,GAAA,QAAA;;SAAA,M;;EAKE;AACA;AAEE;;;;qEARJ,kBAAA,cAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,cAAA,CAAA,GAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAAA,WAAA,CAAA,cAAA,CAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAAA,QAAA,CAAA,cAAA,CAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,iBACO,aAAA,SADP;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEE,sBAEA;AAAA;AACA,cAAA,UAAA,CAAA,YAAA;AAAA;AAAA,eAAA,CAAA;AAAA;;AALF;AAAA,mBAKE,WAAA,CAAA,CAAA,GAAA,SAAA,WAAA,EAAA,EAAA,EAAA,cAAA,EAAA;AAAA,cAAA,GAAA;AAAA,aAAA,CAAA,CALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASIK,SAAAA,WAAAA,CAAAA,gBAAAA,EAEA;AAAA,MAAA,GAAA,GAAA,gBAAA,CAAA,GAAA;AAAA,MAAA,GAAA,GAAA,gBAAA,CAAA,GAAA,EAAA;AACA;;AACA,YAGEC;AAHF;AASA;AACA,IAAA,UAAA,CAAA,oBAAA,GAPEA,CAOF;AAaFC;;AAKI,WAAA,QAAA,CAAA;AAAA,MAAA,GAAA,EAAA;AAAA,eAAA,IAAA;AAAA,OAAA;AAAA,MAAA,KAAA,EAAA,EAAA;AAAA,MAAA,SAAA,EAAA;AAAA,eAAA,IAAA;AAAA,OAAA;AAAA,MAAA,WAAA,EAAA;AAAA,KAAA,CAAA;AAAA;;AAAA,MAAA,OAAA,CAAA,GAAA,CAAA,cAAA,EAAA;AAAA;AACA;AACA,IAAA,OAAMC,CAAAA,OAAN,GAAgBC,IAAhB,CAAA;AAAA,aACA,CAAA,GAAA,wBACaC,WADb,EAAe,OAEbF,CAFa,gDAEbA,CAFF,CADA;AAAA,KAAA,EACA,IADA,CAOA,UAAA,mBAAOG,EACLC;AAAAA,aAAAA,mBACIA,WADJA,CACIA;AAAAA,QAAAA,GAAiBC,EAAjBD;AAAAA,OADJA,CAAAA;AAAAA,KARF,WAUM,UAAA,gBAAA,EAAA;AAAA,MAAA,OAAoBE,CAApB,KAAA,CAHCH,2CAGD,EAEI,gBAFJ;AAGCC,KAbP;AANJ,GA1BE,CA0BF;;;AA8BF,EAAA,OAAIG,CAAAA,KAAJ,CAAIA,GAAJ;AAAmB,SAAUC,UAAAA,CAAAA,QAAAA,CAAP,SAAOA,EAAqB,IAArBA,CAAqB,iBAEzCE;AAAAA,QADLD,cACKC,SAFT,IAESA;AAAAA,QADT,WACSA,SADT,WACSA;AAAT;AAYI;AAKA;AAkBFC,QAAAA,OAAYC,GAAZD,OACE,CAAA,GAAA,CADFA;AACE,QAAA,MAAA,GAAA;AADFA,MAAAA,SAEE,EAFFA,cACE;AAEA,MAAA,OAAA,EAAA,OAFA;AADFA,MAAAA,MAAAA,EAAAA,MACE;AAIFA,MAAAA,GAAAA,EAAAA;AAAAA,QAAAA,GAAAA,EAAAA,GAAAA;AAAAA,QAAAA,QAAYC,EAAZD,IAAAA;AAAoB,QAAA,KAAA,EAAA,KAApBA;AAAoB,QAAA,MAAA,EAAA,MAApBA;AAAAA,QAAAA,OAAyC,EAAzCA;AAAAA;AAJE,KAAA;AAIuC,WAAzCA,OAAyD,CAAA,OAAzDA,CAAAA,gBAEA,CAAiB,KAFjBA,GAGEA,gBAAYE,CAAAA,KAHdF,GAGEA,CAA6B,GAAA,MAAA,CAA7BA,mBAAAA,EAA0DhC,GAA1DgC,EAAAA,MAAAA,CAHFA,EAKAG,IALAH,CAKAG,UAAAA,SAGF;AAAA,aAAA,QAASC,CAAAA,CAAAA,GAAAA,SAAT,WAASA,EACH,EADGA,EACP,gBADOA,EAGPJ;AAAAA,QAAAA,GAAAA,EAAAA,GAAAA;AAAAA,QAAAA,SAAAA,EAAAA,cAAAA;AAAgC,QAAA,WAAA,EAAA,WAAhCA;AAAgC,QAAA,KAAA,EAAA;AAAhCA,OAHOI,CAAAA,CAAT;AAAA,KAREJ,CAAyC;AAWT,GArDLH,CAAV;AAqDe,C,CAAA;;;AAChC,IAAA,eAAMQ,GAAAA,OAAkBL,SAAYE,WAAZF,CAAAA,OAAlBK,KAAkBL,UAAxB;AAAoE,IAApE,SAEKK,GAAAA,IAF+D;;AAE/DA,SAAL,kBAAKA,CAILL,OAJKK,EAIOJ,KAJPI,EAIOJ;AAAZD,MACE,OAAA,CAAA,GAAA,CADFA,iBACE,KACAK,QAFFL,EAEEK;AAAAA,QAAAA,CAFFL,SAEEK,EACA;AAAA,UAAA,IAAA,GAAA;AAHFL,QAAAA,OAKAA,EAAAA;AAFE,OAAA;AAEFA,MAAAA,SAAoB,GAAA,OAAA,CAAA,GAAA,CAApBA,iBAAoB,KAApBA,YAAoB,GACpB,SAAA,WAAA,CACEA,mBADF,CACcE,KADd,EACEF,IADF,CADoB,GAEW,SAA7BA,WAA6B,CAA7BA,2BAA6B,CAE1BE,KAF0B,EAE1BA,IAF0B,CAF/BF;AAGEA;;AAAAA,IAAAA,SACoB,CAAA,MADpBA,CACoB,OADpBA;AACoB,GATtBA,MASsB;AADpBA;AAwEFM,QAAAA,MAAAA,CAAAA,EAAAA,EAAeC;AAAfD,MAAAA,WAEIE,CAAAA,IAFJF,CAEA,cAFAA;AAGA,KA1EsB,CA0EtB;;;AAoBA,QAAA,eAAA,EAAA;AAAA,MAAA,SAAA,WAAA,CAAA,OAAA,CAAA,OAAA,EAAA,KAAA,EAAA,mBAAA;;AAAA,MAAA,eAAA,GAAA,KAAA;;AAAA,UAAA,WAAA,IAAA,MAAA,CAAA,EAAA,EAAA;AAAA,SAAA,GAAA,mBAAA,WAAA,EAAA,WAAA;AAAA;AAAA,KAAA,MAAA;AAAA,MAAA,SAAA,WAAA,CAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAA,kBAAA;AAAA;AAAA;AAAA;;AAAA,SAAA,mBAAA,GAAA;AAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AAAA,EAAA,WAAA,CAAA,IAAA,CAAA,cAAA,EAAA,CAAA;;AACA,EAAA,WAASG,CAAT,OAAA,CACE,0BADF,EAEI,iBAFJ,EAEI,cAFJ;AAEI,EAAA,WAAA,CAAA,OAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,cAAA;;AAAA,MAAA,WAAA,EAAA;AAAA,IAAA,WAAA,CAAA,gBAAA,CAAA,mBAAA,EAAA,OAAA,CAAA,WAAA;AAAA;;AAAA,EAAA,UAAA;AAAA;;AAAA,SAAA,kBAAA,GAAA;AAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA;AAAA,EAAA,WAAA,CAAA,IAAA,CAAA,aAAA,EAAA,CAAA;;AACA,MAAA,eAAA,GAAA,WAAA,CAAA,gBAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAAA,MAAA,CAAA,eAAA,CAAA,MAAA,EAAA;AAAA;AAAA;;AAAA,EAAA,WAAA,CAAA,OAAA,CAAA,gCAAA,EAAA,eAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,cAAA;AAAA,EAAA,WAAA,CAAA,OAAA,CAAA,gBAAA,EAAA,cAAA,EAAA,aAAA;;AAAA,MAAA,WAAA,EAAA;AAAA,IAAA,WAAA,CAAA,gBAAA,CAAA,gBAAA,EAAA,OAAA,CAAA,WAAA;AAAA,IAAA,WAAA,CAAA,gBAAA,CAAA,gCAAA,EAAA,OAAA,CAAA,WAAA;AAAA;;AAAA,EAAA,UAAA;AAAA,GAAA,gCAAA,EAAA,gBAAA,EAAA,OAAA,CAAA,UAAA,OAAA;AAAA,WAAA,WAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AAAA,GAAA;AAAA;;AAAA,SAAA,UAAA,GAAA;AAAA;AAAA,GAAA,cAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,OAAA,CAAA,UAAA,IAAA;AAAA,WAAA,WAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AAAA,GAAA;AAAA;;AAAA,SAAA,YAAA,QAAA;AAAA,MAAA,QAAA,SAAA,QAAA;AAAA,SAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAA,IAAA,EAAA,EAAA,YAAA,KAAA;AAAA,aAAA,WAAA,CAAA;AAAA,QAAA,GAAA,EAAA,SAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA,CAAA,UAAA,UAAA,GAAA;AAAA,eAAA,OAAA,CAAA,KAAA,CAAA,wBAAA,EAAA,GAAA,CAAA;AAAA,OAAA,CAAA;AAAA;AAAA,GAAA,EAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,cAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAA,IAAA,KAAA,EAAA,CAAA,GAAA,QAAA,CAAA,wBAAA,EAAA,MAAA;AAAA,GAAA,EAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,mBAAA,CAAA,kBAAA,CAAA,QAAA,EAAA;AAAA,IAAA,KAAA,EAAA;AAAA,GAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AAAA;;KAAA,Y;;AAAA,IAAA,OAAA,GAAA,SAAA,OAAA,CAAA,GAAA;AAAA,SAAA,UAAA,eAAA,EAAA;AAAA,QAAA,QAAA,GAAA,CAAA,GAAA,SAAA,WAAA,EAAA,EAAA,EAAA,eAAA,EAAA;AAAA,MAAA,SAAA,EAAA,eAAA;AAAA,MAAA,GAAA,EAAA,UAAA;AAAA,MAAA,MAAA,EAAA;AAAA,KAAA,CAAA;AAAA,WAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,YAAA,EAAA,IAAA,EAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,CAAA;AAAA,GAAA;AAAA,CAAA;;AAAA,SAAA,QAAA,QAAA;AAAA,MAAA,GAAA,SAAA,GAAA;AAAA,MAAA,SAAA,SAAA,SAAA;AAAA,MAAA,KAAA,SAAA,KAAA;AAAA,MAAA,GAAA,SAAA,GAAA;AAAA,MAAA,WAAA,SAAA,WAAA;AAAA,EAAA,SAAA,GAAA,SAAA,IAAA,YAAA,CAAA,SAAA;AAAA,EAAA,KAAA,GAAA,KAAA,IAAA,YAAA,CAAA,KAAA;AAAA,MAAA,QAAA,GAAA,CAAA,GAAA,SAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA;AAAA,IAAA,SAAA,EAAA,SAAA;AAAA,IAAA,GAAA,EAAA,GAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,CAAA,CAAA,CAAA;;AACAb,EAAAA,YAAAA,GAAAA,QAAAA;AACA,MAAA,QAAA,GAAA,KAAA;AAAA,MAAA,cAAA;AAAA,MAAA,aAAA,GAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAAA,QAAA,iBAAA,EAAA;AAAA,MAAA,iBAAA;AAAA;;AAAA,IAAA,cAAA,GAAA,0BAAA;AAAA,MAAA,iBAAA,GAAA,IAAA;AAAA,MAAA,OAAA;AAAA,KAAA;;AAAA,IAAA,iBAAA,GAAA,4BAAA;AAAA,MAAA,QAAA,GAAA,IAAA;AAAA,MAAA,iBAAA,GAAA,IAAA;AAAA,UAAA,KAAA,GAAA,IAAA,KAAA,CAAA,wBAAA,CAAA;AAAA,MAAA,KAAA,CAAA,SAAA,GAAA,IAAA;AAAA,MAAA,MAAA,CAAA,KAAA,CAAA;AAAA,KAAA;AAAA,GAAA,CAAA,CAFA,CAEA;AACA;;AACAZ,WAAAA,OAAAA,GAAY0B;AAAZ1B,SANF;AAkCE;AACAA,IAAAA,eAAY0B,IAAZ1B;AAEA;AAFY0B,QA7BZ1B,EAiCA;AAAA,aAAA,KAAA;AAAA;;AAAA,QAAA,gBAAA,GAAA,CAAA,GAAA,WAAA,CAAA,YAAA,EAAA,QAAA,CAAA,gBAAA,CAAA,oBAAA,CAAA,CAAA;AAAA,QAAA,YAAA,GAAA,IAAA,GAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,UAAA,GAAA;AAAA,aAAA,GAAA,CAAA,YAAA,CAAA,aAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,IAAA,WAAA,CAAA,OAAA,CAAA,iBAAA;AAAA,UAAA,IAAA,SAAA,IAAA;AAAA,UAAA,IAAA,SAAA,IAAA;;AAAA,UAAA,CAAA,YAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;AAAA,YAAA,QAAA,GAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA;AAAA,QAAA,QAAA,CAAA,YAAA,CAAA,aAAA,EAAA,IAAA;AAAA,QAAA,QAAA,CAAA,YAAA,CAAA,OAAA,EAAA,GAAA;AAAA,QAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,QAAA;AAAA,QAAA,QAAA,CAAA,WAAA,CAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA;AAAA;AAAA,KAAA;AAAA,WAAA,IAAA;AAAA;;AAAA,WAAA,QAAA,GAAA;AAAA,SAAA;AAPF;AAmBE,aAAA;AASA;AAGE2B,KAFF,eAVA,IAcEC;AAMIC,KAFF,QA9BJ,EAiCM;AACAF,UAAAA,YAAeG,GAAAA,IAAfH,GAAeG,CAAfH,WACEE,CAAAA,GADFF,CACEE,UAAAA,CAAAA;AAAAA,eAAAA,CADFF,CAEEA,IADAE;AAAAA,OADFF,CAAeG,CAAfH;AAEEA,UAFFA,gBAIAA,GAAAA,CAAAA,GAAAA,WAAgBE,CAZpBD,YAYID,EAKN,QAAA,CAAA,gBAAA,CAAA,oBAAA,CALMA,CAFEA;AAOR,UAAA,YAAA,GAAA,gBAAA,CAAA,GAAA,CAAA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,YAAA,CAAA,aAAA,CAAA;AAAA,OAAA,CAAA,CAVM,CAUN;;AACA,WAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,YACEI,CAAAA,MADF,EACWC,EAAAA,GADX,EACWA;AAAAA,YAATD,YAA0B,CAAA,GAA1BA,CADF,YAEEE,CAFF,GAEEA,CADAF,CAASC,EACD;AAAA,UAAA,gBACOE,CAAAA,GAAAA,CADP,CAFV,eAEU,CAIV,OAJU;AAIV,SALWF,MAKX;AAAA,UAAA,gBAAA,CAAA,GAAA,CAAA,CAAA,YAAA,CAAA,OAAA,EAAA,GAAA;AAAA;AAAA,OAjBM,CAiBN;;;AACA,UAAA,aAAA,GAAA,QAAA,CAAA,aAAA,CAAA,sBAAA,CAAA;;AAAA,WAAA;AACAG,MAAAA,aADA,EACAA;AAAAA,QAAAA,WAA0BC,CAAV,OAAhBD,CAAgC,kBAGlCE;AAAAA,cAHEF,IAGFE,UAHEF,IAGFE;AAAAA,cAAAA,SAGF,GAAA,QAAU,CAAA,aAAV,+BACE,IADF,SAHEA;;AAIA,eADF;AAWAtB,UAAAA,SAVE,EAUFA;AAAAA,YAAAA,aACEf,CAAAA,UADFe,CACcuB,YADdvB,CACEf,SADFe,EACEf,aACE,CAAA,WAFJe;AAEI,YAAA,aAAC,GAAD,SAAA;AAAO;AAAA,SAnBPoB;AAiBJpB,OApCU,CAoCVA;;;AAmBA,OAAA,GAAA,WAAA,CAAA,YAAA,EAAA,QAAA,CAAA,gBAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,CAAA,UAAA,EAAA,EAAA;AAAA,QAAA,EAAA,CAAA,UAAA,CAAA,WAAA,CAAA,EAAA;AAAA,OAAA,EAvDU,CAuDV;AACAwB;;AAGEA,MAAAA,gBAAMC,CAAND,QAAgB,CAAA,IAAVC,EACJ/D,QADI+D,CAAND;AACE9D;;AAAAA,IAAAA,cAAAA;AAEA;;AAAA,MAAIA,IAAOgE,GAAAA,aAAX,MACEhE,WADF,CACSgE,aADT,CACEhE,IADF,EAHF8D;AAAAA,IAAAA,QAQF,EAAA;AAREA,GAGE,EAKJ,aACD,MAAA,WAAA,CAAA,aAAA,CAAA,YAAA,EAAA,IAAA,EAAA,aAAA,MAAA,WAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,CANK,CAAA;;AAML,EAAA,OAAA,GA1IK,CA0IL","sourcesContent":["/* global location */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HeadManagerContext } from '../next-server/lib/head-manager-context'\nimport mitt from '../next-server/lib/mitt'\nimport { RouterContext } from '../next-server/lib/router-context'\nimport { delBasePath, hasBasePath } from '../next-server/lib/router/router'\nimport type Router from '../next-server/lib/router/router'\nimport type {\n  AppComponent,\n  AppProps,\n  PrivateRouteInfo,\n} from '../next-server/lib/router/router'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\nimport * as envConfig from '../next-server/lib/runtime-config'\nimport { getURL, loadGetInitialProps, ST } from '../next-server/lib/utils'\nimport type { NEXT_DATA } from '../next-server/lib/utils'\nimport initHeadManager from './head-manager'\nimport PageLoader, { looseToArray, StyleSheetTuple } from './page-loader'\nimport measureWebVitals from './performance-relayer'\nimport { createRouter, makePublicRouterInstance } from './router'\n\n/// <reference types=\"react-dom/experimental\" />\n\ndeclare let __webpack_public_path__: string\n\ndeclare global {\n  interface Window {\n    /* test fns */\n    __NEXT_HYDRATED?: boolean\n    __NEXT_HYDRATED_CB?: () => void\n\n    /* prod */\n    __NEXT_PRELOADREADY?: (ids?: string[]) => void\n    __NEXT_DATA__: NEXT_DATA\n    __NEXT_P: any[]\n  }\n}\n\ntype RenderRouteInfo = PrivateRouteInfo & { App: AppComponent }\ntype RenderErrorProps = Omit<RenderRouteInfo, 'Component' | 'styleSheets'>\n\nif (!('finally' in Promise.prototype)) {\n  ;(Promise.prototype as PromiseConstructor['prototype']).finally = require('next/dist/build/polyfills/finally-polyfill.min')\n}\n\nconst data: typeof window['__NEXT_DATA__'] = JSON.parse(\n  document.getElementById('__NEXT_DATA__')!.textContent!\n)\nwindow.__NEXT_DATA__ = data\n\nexport const version = process.env.__NEXT_VERSION\n\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n} = data\n\nconst prefix = assetPrefix || ''\n\n// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/` //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {},\n})\n\nlet asPath = getURL()\n\n// make sure not to attempt stripping basePath for 404s\nif (hasBasePath(asPath)) {\n  asPath = delBasePath(asPath)\n}\n\ntype RegisterFn = (input: [string, () => void]) => void\n\nconst pageLoader = new PageLoader(buildId, prefix, page)\nconst register: RegisterFn = ([r, f]) => pageLoader.registerPage(r, f)\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map((p) => setTimeout(() => register(p), 0))\n}\nwindow.__NEXT_P = []\n;(window.__NEXT_P as any).push = register\n\nconst headManager = initHeadManager()\nconst appElement = document.getElementById('__next')\n\nlet lastAppProps: AppProps\nlet lastRenderReject: (() => void) | null\nlet webpackHMR: any\nexport let router: Router\nlet CachedComponent: React.ComponentType\nlet cachedStyleSheets: StyleSheetTuple[]\nlet CachedApp: AppComponent, onPerfEntry: (metric: any) => void\n\nclass Container extends React.Component<{\n  fn: (err: Error, info?: any) => void\n}> {\n  componentDidCatch(componentErr: Error, info: any) {\n    this.props.fn(componentErr, info)\n  }\n\n  componentDidMount() {\n    this.scrollToHash()\n\n    // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (\n      router.isSsr &&\n      (isFallback ||\n        (data.nextExport &&\n          (isDynamicRoute(router.pathname) || location.search)) ||\n        (hydrateProps && hydrateProps.__N_SSG && location.search))\n    ) {\n      // update query on mount for exported pages\n      router.replace(\n        router.pathname +\n          '?' +\n          String(\n            querystring.assign(\n              querystring.urlQueryToSearchParams(router.query),\n              new URLSearchParams(location.search)\n            )\n          ),\n        asPath,\n        {\n          // @ts-ignore\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback,\n        }\n      )\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash()\n  }\n\n  scrollToHash() {\n    let { hash } = location\n    hash = hash && hash.substring(1)\n    if (!hash) return\n\n    const el = document.getElementById(hash)\n    if (!el) return\n\n    // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0)\n  }\n\n  render() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.props.children\n    } else {\n      const { ReactDevOverlay } = require('@next/react-dev-overlay/lib/client')\n      return <ReactDevOverlay>{this.props.children}</ReactDevOverlay>\n    }\n  }\n}\n\nexport const emitter = mitt()\n\nexport default async (opts: { webpackHMR?: any } = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (process.env.NODE_ENV === 'development') {\n    webpackHMR = opts.webpackHMR\n  }\n  const { page: app, mod } = await pageLoader.loadPage('/_app')\n  CachedApp = app as AppComponent\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries,\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${\n        Math.floor(Math.random() * (9e12 - 1)) + 1e12\n      }`\n      let perfStartEntry\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label:\n          entryType === 'mark' || entryType === 'measure'\n            ? 'custom'\n            : 'web-vital',\n      })\n    }\n  }\n\n  let initialErr = hydrateErr\n\n  try {\n    ;({\n      page: CachedComponent,\n      styleSheets: cachedStyleSheets,\n    } = await pageLoader.loadPage(page))\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { isValidElementType } = require('react-is')\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(\n          `The default export is not a React Component in page: \"${page}\"`\n        )\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { getNodeError } = require('@next/react-dev-overlay/lib/client')\n    // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr!.message)\n          } catch (e) {\n            error = e\n          }\n\n          error.name = initialErr!.name\n          error.stack = initialErr!.stack\n\n          const node = getNodeError(error)\n          throw node\n        })\n      }\n      // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr\n        })\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds)\n  }\n\n  router = createRouter(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    initialStyleSheets: cachedStyleSheets,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: ({ Component, styleSheets, props, err }, App) =>\n      render({ App, Component, styleSheets, props, err }),\n  })\n\n  // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-init-client!')\n      .then((initClientModule) => {\n        return initClientModule.default({ router })\n      })\n      .catch((initClientErr) => {\n        console.error('Error calling client-init for plugins', initClientErr)\n      })\n  }\n\n  const renderCtx = {\n    App: CachedApp,\n    Component: CachedComponent,\n    styleSheets: cachedStyleSheets,\n    props: hydrateProps,\n    err: initialErr,\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    render(renderCtx)\n    return emitter\n  } else {\n    return { emitter, render, renderCtx }\n  }\n}\n\nexport async function render(renderingProps: RenderRouteInfo) {\n  if (renderingProps.err) {\n    await renderError(renderingProps)\n    return\n  }\n\n  try {\n    await doRender(renderingProps)\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr\n      })\n    }\n    await renderError({ ...renderingProps, err: renderErr })\n  }\n}\n\n// This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nexport function renderError(renderErrorProps: RenderErrorProps) {\n  const { App, err } = renderErrorProps\n\n  // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (process.env.NODE_ENV !== 'production') {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError()\n\n    // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: [],\n    })\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-error-client!')\n      .then((onClientErrorModule) => {\n        return onClientErrorModule.default({ err })\n      })\n      .catch((onClientErrorErr) => {\n        console.error(\n          'error calling on-error-client for plugins',\n          onClientErrorErr\n        )\n      })\n  }\n\n  // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err)\n  return pageLoader\n    .loadPage('/_error')\n    .then(({ page: ErrorComponent, styleSheets }) => {\n      // In production we do a normal render with the `ErrorComponent` as component.\n      // If we've gotten here upon initial render, we can use the props from the server.\n      // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n      const AppTree = wrapApp(App)\n      const appCtx = {\n        Component: ErrorComponent,\n        AppTree,\n        router,\n        ctx: { err, pathname: page, query, asPath, AppTree },\n      }\n      return Promise.resolve(\n        renderErrorProps.props\n          ? renderErrorProps.props\n          : loadGetInitialProps(App, appCtx)\n      ).then((initProps) =>\n        doRender({\n          ...renderErrorProps,\n          err,\n          Component: ErrorComponent,\n          styleSheets,\n          props: initProps,\n        })\n      )\n    })\n}\n\n// If hydrate does not exist, eg in preact.\nlet isInitialRender = typeof ReactDOM.hydrate === 'function'\nlet reactRoot: any = null\nfunction renderReactElement(reactEl: JSX.Element, domEl: HTMLElement) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = { hydrate: true }\n      reactRoot =\n        process.env.__NEXT_REACT_MODE === 'concurrent'\n          ? (ReactDOM as any).unstable_createRoot(domEl, opts)\n          : (ReactDOM as any).unstable_createBlockingRoot(domEl, opts)\n    }\n    reactRoot.render(reactEl)\n  } else {\n    // mark start of hydrate/render\n    if (ST) {\n      performance.mark('beforeRender')\n    }\n\n    // The check for `.hydrate` is there to support React alternatives like preact\n    if (isInitialRender) {\n      ReactDOM.hydrate(reactEl, domEl, markHydrateComplete)\n      isInitialRender = false\n\n      if (onPerfEntry && ST) {\n        measureWebVitals(onPerfEntry)\n      }\n    } else {\n      ReactDOM.render(reactEl, domEl, markRenderComplete)\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!ST) return\n\n  performance.mark('afterHydrate') // mark end of hydration\n\n  performance.measure(\n    'Next.js-before-hydration',\n    'navigationStart',\n    'beforeRender'\n  )\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate')\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry)\n  }\n  clearMarks()\n}\n\nfunction markRenderComplete() {\n  if (!ST) return\n\n  performance.mark('afterRender') // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark')\n\n  if (!navStartEntries.length) {\n    return\n  }\n\n  performance.measure(\n    'Next.js-route-change-to-render',\n    navStartEntries[0].name,\n    'beforeRender'\n  )\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender')\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry)\n    performance\n      .getEntriesByName('Next.js-route-change-to-render')\n      .forEach(onPerfEntry)\n  }\n  clearMarks()\n  ;['Next.js-route-change-to-render', 'Next.js-render'].forEach((measure) =>\n    performance.clearMeasures(measure)\n  )\n}\n\nfunction clearMarks() {\n  ;[\n    'beforeRender',\n    'afterHydrate',\n    'afterRender',\n    'routeChange',\n  ].forEach((mark) => performance.clearMarks(mark))\n}\n\nfunction AppContainer({\n  children,\n}: React.PropsWithChildren<{}>): React.ReactElement {\n  return (\n    <Container\n      fn={(error) =>\n        renderError({ App: CachedApp, err: error }).catch((err) =>\n          console.error('Error rendering page: ', err)\n        )\n      }\n    >\n      <RouterContext.Provider value={makePublicRouterInstance(router)}>\n        <HeadManagerContext.Provider value={headManager}>\n          {children}\n        </HeadManagerContext.Provider>\n      </RouterContext.Provider>\n    </Container>\n  )\n}\n\nconst wrapApp = (App: AppComponent) => (\n  wrappedAppProps: Record<string, any>\n) => {\n  const appProps: AppProps = {\n    ...wrappedAppProps,\n    Component: CachedComponent,\n    err: hydrateErr,\n    router,\n  }\n  return (\n    <AppContainer>\n      <App {...appProps} />\n    </AppContainer>\n  )\n}\n\nfunction doRender({\n  App,\n  Component,\n  props,\n  err,\n  styleSheets,\n}: RenderRouteInfo): Promise<any> {\n  Component = Component || lastAppProps.Component\n  props = props || lastAppProps.props\n\n  const appProps: AppProps = {\n    ...props,\n    Component,\n    err,\n    router,\n  }\n  // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps\n\n  let canceled = false\n  let resolvePromise: () => void\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject()\n    }\n    resolvePromise = () => {\n      lastRenderReject = null\n      resolve()\n    }\n    lastRenderReject = () => {\n      canceled = true\n      lastRenderReject = null\n\n      const error: any = new Error('Cancel rendering route')\n      error.cancelled = true\n      reject(error)\n    }\n  })\n\n  // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart(): boolean {\n    if (\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles.\n      isInitialRender ||\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV !== 'production'\n    ) {\n      return false\n    }\n\n    const currentStyleTags = looseToArray<HTMLStyleElement>(\n      document.querySelectorAll('style[data-n-href]')\n    )\n    const currentHrefs = new Set(\n      currentStyleTags.map((tag) => tag.getAttribute('data-n-href'))\n    )\n\n    styleSheets.forEach(({ href, text }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style')\n        styleTag.setAttribute('data-n-href', href)\n        styleTag.setAttribute('media', 'x')\n\n        document.head.appendChild(styleTag)\n        styleTag.appendChild(document.createTextNode(text))\n      }\n    })\n    return true\n  }\n\n  function onCommit() {\n    if (\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV === 'production' &&\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles:\n      !isInitialRender &&\n      // Ensure this render was not canceled\n      !canceled\n    ) {\n      const desiredHrefs = new Set(styleSheets.map((s) => s.href))\n      const currentStyleTags = looseToArray<HTMLStyleElement>(\n        document.querySelectorAll('style[data-n-href]')\n      )\n      const currentHrefs = currentStyleTags.map(\n        (tag) => tag.getAttribute('data-n-href')!\n      )\n\n      // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media')\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x')\n        }\n      }\n\n      // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]')\n      if (\n        // This should be an invariant:\n        referenceNode\n      ) {\n        styleSheets.forEach(({ href }) => {\n          const targetTag = document.querySelector(\n            `style[data-n-href=\"${href}\"]`\n          )\n          if (\n            // This should be an invariant:\n            targetTag\n          ) {\n            referenceNode!.parentNode!.insertBefore(\n              targetTag,\n              referenceNode!.nextSibling\n            )\n            referenceNode = targetTag\n          }\n        })\n      }\n\n      // Finally, clean up server rendered stylesheets:\n      looseToArray<HTMLLinkElement>(\n        document.querySelectorAll('link[data-n-p]')\n      ).forEach((el) => {\n        el.parentNode!.removeChild(el)\n      })\n\n      // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height')\n    }\n\n    resolvePromise()\n  }\n\n  const elem = (\n    <Root callback={onCommit}>\n      <AppContainer>\n        <App {...appProps} />\n      </AppContainer>\n    </Root>\n  )\n\n  onStart()\n\n  // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(\n    process.env.__NEXT_STRICT_MODE ? (\n      <React.StrictMode>{elem}</React.StrictMode>\n    ) : (\n      elem\n    ),\n    appElement!\n  )\n\n  return renderPromise\n}\n\nfunction Root({\n  callback,\n  children,\n}: React.PropsWithChildren<{\n  callback: () => void\n}>): React.ReactElement {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      window.__NEXT_HYDRATED = true\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB()\n      }\n    }, [])\n  }\n  return children as React.ReactElement\n}\n"]},"metadata":{},"sourceType":"script"}